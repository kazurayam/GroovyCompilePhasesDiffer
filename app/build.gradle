plugins {
    id 'groovy'
    id 'com.vanniktech.maven.publish' version '0.34.0'
}

group = 'com.kazurayam'
version = '0.1.0-SNAPSHOT'

ext {
    groovyVersion = '3.0.17'
    GitHubUserName = 'kazurayam'
}
repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-all
    implementation("org.codehaus.groovy:groovy-all:3.0.17")

    // https://mvnrepository.com/artifact/io.github.java-diff-utils/java-diff-utils
    implementation("io.github.java-diff-utils:java-diff-utils:4.16")

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation libs.junit

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

mavenPublishing {
    publishToMavenCentral()
    signAllPublications()

    coordinates(project.group,          // com.kazurayam
            project.rootProject.name,   // groovy-compile-phases-differ
            project.version)            // e.g, 0.1.0 or 0.1.0-SNAPSHOT

    pom {
        name.set(project.rootProject.name)
        description.set('''
This library provides com.kazurayam.groovy.CompilePhasesDiffer class 
shows you how Groovy Compiler transforms a Groovy source 
into a binary class. The Abstract Syntax Tree objects 
of each CompilePhases will be unparsed into human-readable *.groovy 
source files. A concise report in Markdown format presents the unified-diff 
of the rebuilt sources which will let you understand what Groovy Compiler
does at each CompilePhases.''')
        inceptionYear.set('2025')
        url.set("https://${GitHubUserName}.github.io/GroovyCompilePhasesDiffer/")
        licenses {
            license {
                name.set('The Apache License, Version 2.0')
                url.set('https://www.apache.org.licenses/LICENSE-2.0.txt')
                distribution.set('http://www.apache.org/licenses/LICENSE-2.0.txt')
            }
        }
        developers {
            developer {
                id.set("${GitHubUserName}")
                name.set('URAYAMA,kazuaki')
                url.set("https://github.com/${GitHubUserName}/")
            }
        }
        scm {
            connection = "scm:git:https://github.com/${GitHubUserName}/${project.rootProject.name}.git"
            developerConnection = "scm:git:git@github.com:${GitHubUserName}/${project.rootProject.name}.git"
            url = "https://github.com/${GitHubUserName}/${project.rootProject.name}"
        }
    }
}